name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

jobs:
  
  Build-images:
    runs-on: ubuntu-latest
    
    steps:
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Clonning repo
      uses: actions/checkout@v3
    
    - name: Build and push the nginx image
      run: |
        ls
        TAG=$(date +%s)
        docker build --file nginx/Dockerfile.ecs.dev --tag ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-lb:$TAG --tag ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-lb:latest ./nginx
        docker push ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-lb:$TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-lb:latest

    - 
      name: Build the server image
      run: |
        TAG=$(date +%s)
        docker build --tag ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-server:$TAG --tag ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-server:latest ./server 
        docker push ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-server:$TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-server:latest

    - name: Build the frontend image
      run: |
        TAG=$(date +%s)
        docker build --tag ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-client:$TAG --tag ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-client:latest ./client 
        docker push ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-client:$TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/multicontainer-r2np-client:latest

  terraforming:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform -chdir=Iac/ecs init
        
      - name: Validate Terraform configuration
        run: terraform -chdir=Iac/ecs validate

      - name: Applying changes to infrastructure
        run: terraform -chdir=Iac/ecs apply --auto-approve
      
