name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  Build-images:
    if: "!contains(github.event.commits.*.added, '.tf')"
    runs-on: ubuntu-latest
    
    steps:
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Clonning repo
      uses: actions/checkout@v3
    
    - name: Build and push the nginx image
      run: |
        ls
        TAG=$(date +%s)
        docker build --file nginx/Dockerfile.ecs.dev --tag ${{ secrets.DOCKER_USERNAME }}/nginx:$TAG --tag ${{ secrets.DOCKER_USERNAME }}/nginx:latest ./nginx
        docker push ${{ secrets.DOCKER_USERNAME }}/nginx:$TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/nginx:latest

    - 
      name: Build the server image
      run: |
        TAG=$(date +%s)
        docker build --tag ${{ secrets.DOCKER_USERNAME }}/server:$TAG --tag ${{ secrets.DOCKER_USERNAME }}/server:latest ./server 
        docker push ${{ secrets.DOCKER_USERNAME }}/server:$TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/server:latest

    - name: Build the frontend image
      run: |
        TAG=$(date +%s)
        docker build --tag ${{ secrets.DOCKER_USERNAME }}/frontend:$TAG --tag ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./client 
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:$TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  terraforming:
    if: "contains(toJSON(github.event.commits.*.added), '.tf')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: <desired_version>

      - name: moving to terraform code
        run: cd ./Iac/ecs
        
      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Applying changes to infrastructure
        run: terraform apply --auto-approve
      
